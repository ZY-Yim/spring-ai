
spring:
  autoconfigure:
#    禁用ollama
    exclude: org.springframework.ai.model.ollama.autoconfigure.OllamaEmbeddingAutoConfiguration
  application:
    name: spring-ai
  data:
    redis:
      host: localhost
      port: 6380
      url: redis://localhost:6380
  ai:
    ollama:
      base-url: http://localhost:11434
      chat:
        model: qwen3:0.6b
    openai:
      base-url: https://dashscope.aliyuncs.com/compatible-mode
      api-key: ${DASHSCOPE_API_KEY}
      chat:
        options:
          model: qwen-max
          temperature: 0.7
      embedding:
        options:
          model: text-embedding-v3
          dimensions: 1024
#    以下配置未生效，手动@Bean里一个RedisVectorStore
#    vectorstore:
#      redis:
#        index-name: spring_ai_redis
#        initialize-schema: true
#        prefix: "doc:"
  devtools:
    restart:
      enabled: true

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/itheima?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&tinyInt1isBit=false&allowPublicKeyRetrieval=true&allowMultiQueries=true&useServerPrepStmts=false
    username: root
    password: 12345678

  oss:
    endpoint: oss-cn-hangzhou.aliyuncs.com
    accessKeyId: ${OSS_KEY}
    accessKeySecret: ${OSS_SECRET}
    bucketName: yzy-ucket
    fileHost: springai/pdf

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: msg-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

logging:
  level:
    org.springframework.ai.chat.client.advisor: debug
    com.yanzhiyu.springai: debug

server:
  port: 8080